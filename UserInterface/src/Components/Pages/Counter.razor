@page "/counter"
@rendermode InteractiveServer
@inject ICodeSmellDetectionService CodeSmellDetectionService

<PageTitle>Code Smell Detection Counter</PageTitle>

<h2>Code Smell Counter</h2>

<p role="status">Current code smell count: @currentCount</p>

@if (isLoading)
{
    <p>Loading...</p>
}
else if (!string.IsNullOrEmpty(errorMessage))
{
    <p class="text-danger">@errorMessage</p>
}

<button class="btn btn-primary" @onclick="DetectCodeSmells" disabled="@isLoading">Click me</button>

@code {
    private int currentCount = 0;
    private bool isLoading = false;
    private string? errorMessage;

    private async Task DetectCodeSmells()
    {
        isLoading = true;
        errorMessage = null;
        try
        {
            var codeSmell = await CodeSmellDetectionService.DetectAsync();
            currentCount = codeSmell.Count();
        }
        catch (Exception ex)
        {
            errorMessage = $"Error detecting code smells: {ex.Message}";
        }
        finally
        {
            isLoading = false;
        }
    }
}